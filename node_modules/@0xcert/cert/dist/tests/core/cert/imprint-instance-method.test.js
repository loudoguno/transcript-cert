"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const spec_1 = require("@hayspec/spec");
const cert_1 = require("../../../core/cert");
const schema_1 = require("../helpers/schema");
const spec = new spec_1.Spec();
spec.test('calculates imprint for complete data object', (ctx) => __awaiter(this, void 0, void 0, function* () {
    const cert = new cert_1.Cert({
        schema: schema_1.exampleSchema,
    });
    const imprint = yield cert.imprint(schema_1.exampleData);
    ctx.is(imprint, 'fe3ea95fa6bda2001c58fd13d5c7655f83b8c8bf225b9dfa7b8c7311b8b68933');
}));
exports.default = spec;
//# sourceMappingURL=imprint-instance-method.test.js.map